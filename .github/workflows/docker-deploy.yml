name: Docker Compose Build and Deploy

env:
  VERSION: 1.2.3

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check if Docker images for this version already exist
        run: |
          # Check if the frontend image exists
          if docker manifest inspect dreammf/ros-frontend:${{ env.VERSION }} > /dev/null 2>&1; then
            echo "Frontend image dreammf/ros-frontend:${{ env.VERSION }} already exists on Docker Hub."
            echo "SKIP_FRONTEND=true" >> $GITHUB_ENV
          fi

          # Check if the backend image exists
          if docker manifest inspect dreammf/ros-backend:${{ env.VERSION }} > /dev/null 2>&1; then
            echo "Backend image dreammf/ros-backend:${{ env.VERSION }} already exists on Docker Hub."
            echo "SKIP_BACKEND=true" >> $GITHUB_ENV
          fi

      - name: Build and push backend image
        if: env.SKIP_BACKEND != 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.backend
          platforms: linux/amd64
          push: true
          tags: |
            dreammf/ros-backend:${{ env.VERSION }}
            dreammf/ros-backend:latest

      - name: Build and push frontend image
        if: env.SKIP_FRONTEND != 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.frontend
          platforms: linux/amd64
          push: true
          tags: |
            dreammf/ros-frontend:${{ env.VERSION }}
            dreammf/ros-frontend:latest
          build-args: |
            BACKEND_URL=https://localhost:4001
            AUTH_AUTHORITY=https://localhost:4001
            AUTH_CLIENT_ID=DreamMF-Web-01202025

      - name: Add Docker's official GPG key and repository
        run: |
          # Install dependencies to add new repositories
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg

          # Add Docker's official GPG key
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg

          # Add Docker apt repository
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo $VERSION_CODENAME) stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

          # Update package lists
          sudo apt-get update

      - name: Install Docker Compose plugin
        run: |
          sudo apt-get install -y docker-compose-plugin

      - name: Deploy with Docker Compose
        run: docker compose -f docker-compose.yml up -d backend frontend
        env:
          VERSION: ${{ env.VERSION }}
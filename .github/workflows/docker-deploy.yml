name: Docker Compose Build and Deploy

env:
  VERSION: 1.0.0

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            dreammf/ros-frontend:${{ env.VERSION }}-linux-amd64
            dreammf/ros-frontend:latest-linux-amd64
            dreammf/ros-backend:${{ env.VERSION }}-linux-amd64
            dreammf/ros-backend:latest-linux-amd64

      - name: Build and push latest amd64 images
        if: matrix.platform == 'linux/amd64'
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux-amd64
          push: true
          tags: |
            dreammf/ros-frontend:latest
            dreammf/ros-backend:latest

      - name: Deploy with Docker Compose
        run: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
